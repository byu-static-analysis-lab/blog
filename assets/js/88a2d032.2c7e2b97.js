"use strict";(self.webpackChunkdev_blog=self.webpackChunkdev_blog||[]).push([[6981],{6748:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var i=t(7611),n=t(4848),r=t(8453);const o={slug:"db-aware-program-optimization",title:"Paper - Database-Aware Program Optimization via Static Analysis",date:"2024-11-18T12:00",authors:["koby"],tags:["paper","optimization","database","api coalescing"]},s=void 0,l={authorsImageUrls:[void 0]},c=[];function p(a){const e={div:"div",i:"i",p:"p",span:"span",...(0,r.R)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:["A lot of developer work on database applications goes into making sure the interaction between the application layer and the database layer is efficient. In my experience in industry, this work is mostly done manually, and in an ad-hoc fashion. ",(0,n.jsx)(e.span,{className:"",id:"citation--ramachandra2014database--1",children:"(Ramachandra and Guravannavar 2014)"})," give an account about some ways this can be done manually."]}),"\n",(0,n.jsxs)(e.div,{id:"refs",className:"references csl-bib-body",children:["\n  ",(0,n.jsxs)(e.div,{className:"csl-entry",id:"bib-ramachandra2014database",children:["Karthik Ramachandra, and Ravindra Guravannavar. \u201cDatabase-Aware Program Optimization via Static Analysis.\u201d ",(0,n.jsx)(e.i,{children:"IEEE Data Eng. Bull."})," 37 (1). Citeseer: 60\u201369. 2014."]}),"\n"]})]})}function d(a={}){const{wrapper:e}={...(0,r.R)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(p,{...a})}):p(a)}},8453:(a,e,t)=>{t.d(e,{R:()=>o,x:()=>s});var i=t(6540);const n={},r=i.createContext(n);function o(a){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function s(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(n):a.components||n:o(a.components),i.createElement(r.Provider,{value:e},a.children)}},7611:a=>{a.exports=JSON.parse('{"permalink":"/blog/db-aware-program-optimization","editUrl":"https://github.com/byu-static-analysis-lab/blog/tree/main/blog/2024-11-db-aware-program-optimization.md","source":"@site/blog/2024-11-db-aware-program-optimization.md","title":"Paper - Database-Aware Program Optimization via Static Analysis","description":"A lot of developer work on database applications goes into making sure the interaction between the application layer and the database layer is efficient. In my experience in industry, this work is mostly done manually, and in an ad-hoc fashion. [@ramachandra2014database] give an account about some ways this can be done manually.","date":"2024-11-18T12:00:00.000Z","tags":[{"inline":true,"label":"paper","permalink":"/blog/tags/paper"},{"inline":true,"label":"optimization","permalink":"/blog/tags/optimization"},{"inline":true,"label":"database","permalink":"/blog/tags/database"},{"inline":true,"label":"api coalescing","permalink":"/blog/tags/api-coalescing"}],"readingTime":3.36,"hasTruncateMarker":true,"authors":[{"name":"Koby Lewis","title":"Author","url":"https://github.com/plyb","imageURL":"https://github.com/plyb.png","key":"koby","page":null}],"frontMatter":{"slug":"db-aware-program-optimization","title":"Paper - Database-Aware Program Optimization via Static Analysis","date":"2024-11-18T12:00","authors":["koby"],"tags":["paper","optimization","database","api coalescing"]},"unlisted":false,"prevItem":{"title":"Paper - Optimizing Database-Backed Applications with Query Synthesis","permalink":"/blog/query-by-synthesis"},"nextItem":{"title":"Paper - A General Fine-Grained Reduction Theory for Effect Handlers","permalink":"/blog/fine-grained-reduction-theory-for-effect-handlers"}}')}}]);